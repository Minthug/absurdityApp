spring:
  profiles:
    include:


  datasource:
    url: jdbc:postgresql://localhost:5432/brothers
    username: minthug
    password: 1234
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  # create, create-drop, validate, update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: JZyot9UmRasVMMTiGn1I
            client-secret: YulxRS0e6F
            scope: nickname, email
            redirect-uri: "{baseUrl}/login/oauth/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          kakao:
            client-name: kakao
            client-id: 3ad7f886a9bab530b840abf8ee5c8b58
            client-secret: b3PqoMFX9UMDpNPjwWoWnCaw2MMv86DY
            scope: profile_nickname, account_email
            redirect-uri: "{baseUrl}/login/oauth/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          google:
            client-id: 170861640900-34omi25au55mb616tq60463mu1tobuq1.apps.googleusercontent.com
            client-secret: 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
            scope: email, profile
            redirect-uri: "{baseUrl}/login/oauth/code/{registrationId}"
            client-name: Google
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 3000                  # 연결 타임아웃 (ms)
      database: 0                    # Redis database 인덱스

  jwt:
    issuer: absurdity-app
    client-secret: c677d5ad13c6b8e0e09bf5cf4412caaa6d178e94f7470dcf53cec5b5f3d13663
    access-expiry-seconds: 3600
    refresh-expiry-seconds: 1209600

  payment:
    toss:
      success-url: http://localhost:8080/v1/pays/toss/success
      fail-url: http://localhost:8080/v1/pays/toss/fail
      secret-key: test_sk_Ba5PzR0ArnyWngvd5wnkVvmYnNeD
      confirm-url: https://api.tosspayments.com/v1/payments/confirm

  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: absurdity-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    test:
      topic: errand-status-topic